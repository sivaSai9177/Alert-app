import React from 'react';
import { View, Text, TouchableOpacity, StyleSheet, Platform, SafeAreaView } from 'react-native';
import { router } from 'expo-router';
import { useAuth } from '@/hooks/useAuth';
import { useTheme } from '@/lib/theme/provider';

export default function DebugNavigationScreen() {
  const theme = useTheme();
  const { user, isAuthenticated, hasHydrated } = useAuth();
  
// TODO: Replace with structured logging - console.log('[DebugNavigation] Component rendering');
// TODO: Replace with structured logging - console.log('[DebugNavigation] Auth state:', { isAuthenticated, hasHydrated, user: !!user });
  
  const navigateTo = (path: string) => {
// TODO: Replace with structured logging - console.log(`[DebugNavigation] Navigating to: ${path}`);
    router.push(path as any);
  };
  
  const replaceTo = (path: string) => {
// TODO: Replace with structured logging - console.log(`[DebugNavigation] Replacing to: ${path}`);
    router.replace(path as any);
  };
  
  return (
    <SafeAreaView style={{ flex: 1, backgroundColor: theme.muted }}>
      <View style={styles.content}>
        <Text style={styles.title}>Navigation Debug Screen</Text>
        <Text style={[styles.info, { color: theme.mutedForeground }]}>Platform: {Platform.OS}</Text>
        <Text style={[styles.info, { color: theme.mutedForeground }]}>Auth State: {hasHydrated ? (isAuthenticated ? 'Authenticated' : 'Not Authenticated') : 'Loading...'}</Text>
        
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Push Navigation</Text>
          <TouchableOpacity style={styles.button} onPress={() => navigateTo('/(auth)/login')}>
            <Text style={styles.buttonText}>Push to Login</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.button} onPress={() => navigateTo('/(auth)/register')}>
            <Text style={styles.buttonText}>Push to Register</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.button} onPress={() => navigateTo('/(home)')}>
            <Text style={styles.buttonText}>Push to Home</Text>
          </TouchableOpacity>
        </View>
        
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Replace Navigation</Text>
          <TouchableOpacity style={[styles.button, styles.replaceButton]} onPress={() => replaceTo('/(auth)/login')}>
            <Text style={styles.buttonText}>Replace to Login</Text>
          </TouchableOpacity>
          <TouchableOpacity style={[styles.button, styles.replaceButton]} onPress={() => replaceTo('/(auth)/register')}>
            <Text style={styles.buttonText}>Replace to Register</Text>
          </TouchableOpacity>
          <TouchableOpacity style={[styles.button, styles.replaceButton]} onPress={() => replaceTo('/(home)')}>
            <Text style={styles.buttonText}>Replace to Home</Text>
          </TouchableOpacity>
        </View>
        
        <TouchableOpacity style={[styles.button, styles.backButton]} onPress={() => router.back()}>
          <Text style={styles.buttonText}>Go Back</Text>
        </TouchableOpacity>
      </View>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  content: {
    flex: 1,
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 10,
    textAlign: 'center',
  },
  info: {
    fontSize: 16,
    marginBottom: 5,
    textAlign: 'center',
  },
  section: {
    marginTop: 20,
    marginBottom: 20,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: '600',
    marginBottom: 10,
  },
  button: {
    backgroundColor: '#007AFF',
    padding: 15,
    borderRadius: 8,
    marginBottom: 10,
  },
  replaceButton: {
    backgroundColor: '#34C759',
  },
  backButton: {
    backgroundColor: '#FF3B30',
    marginTop: 20,
  },
  buttonText: {
    color: theme.background,
    fontSize: 16,
    fontWeight: '500',
    textAlign: 'center',
  },
});