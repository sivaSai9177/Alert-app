{
  "name": "hospital-alert-system",
  "main": "index.js",
  "version": "2.0.0",
  "scripts": {
    "// === MAIN COMMANDS (UNIFIED) ===": "",
    "start": "EXPO_GO=1 expo start --host lan --go",
    "start:simple": "EXPO_GO=1 expo start --host lan --go",
    "start:unified": "./scripts/start-unified.sh network",
    "start:local": "./scripts/start-unified.sh local",
    "start:tunnel": "./scripts/start-unified.sh tunnel",
    "start:oauth": "./scripts/start-unified.sh oauth",
    "healthcare": "./scripts/start-unified.sh oauth",
    "healthcare:network": "./scripts/start-unified.sh healthcare-network",
    "healthcare:oauth": "./scripts/start-unified.sh oauth",
    "start:local:healthcare": "APP_ENV=local ./scripts/start-with-healthcare.sh",
    "start:healthcare:network": "./scripts/start-unified.sh healthcare-network",
    "android": "EXPO_GO=1 expo start --android --host lan --go",
    "ios": "EXPO_GO=1 expo start --ios --host lan --go",
    "web": "EXPO_GO=1 expo start --web --go",
    "web:local": "APP_ENV=local DATABASE_URL=postgresql://myexpo:myexpo123@localhost:5432/myexpo_dev EXPO_GO=1 expo start --web --go",
    "web:preview": "APP_ENV=preview DATABASE_URL=postgresql://myexpo:myexpo123@localhost:5432/myexpo_preview EXPO_GO=1 expo start --web --go",
    "web:dev": "APP_ENV=development DATABASE_URL=$NEON_DATABASE_URL EXPO_GO=1 expo start --web --go",
    "web:ngrok": "APP_ENV=local EXPO_PUBLIC_API_URL=$NGROK_URL EXPO_PUBLIC_AUTH_URL=$NGROK_URL AUTH_URL=$NGROK_URL BETTER_AUTH_URL=$NGROK_URL EXPO_GO=1 expo start --web --go",
    "expo:ios": "APP_ENV=development EXPO_GO=1 expo start --ios --host lan --go",
    "expo:android": "APP_ENV=development EXPO_GO=1 expo start --android --host lan --go",
    "// === ENVIRONMENT-SPECIFIC (LOCAL=DOCKER, DEV=NEON) ===": "",
    "local": "APP_ENV=local EXPO_GO=1 expo start --host lan --go",
    "local:healthcare": "APP_ENV=local ./scripts/start-with-healthcare.sh",
    "db:setup:local": "./scripts/setup-database-local.sh",
    "local:healthcare:web": "APP_ENV=local AUTO_OPEN_WEB=true ./scripts/start-with-healthcare.sh",
    "local:oauth": "./scripts/start-local-oauth.sh",
    "oauth:fix": "./scripts/fix-oauth-local.sh",
    "start:healthcare": "./scripts/start-with-healthcare.sh",
    "local:tunnel": "APP_ENV=local EXPO_GO=1 NODE_ENV=development expo start --tunnel --go",
    "dev": "APP_ENV=development EXPO_GO=1 expo start --host lan --go",
    "dev:healthcare": "APP_ENV=development ./scripts/start-with-healthcare.sh",
    "dev:tunnel": "APP_ENV=development EXPO_GO=1 NODE_ENV=development expo start --tunnel --go",
    "staging": "APP_ENV=staging EXPO_GO=1 expo start --host lan --go",
    "dev:local": "APP_ENV=local EXPO_GO=1 expo start --host lan --go",
    "dev:preview": "APP_ENV=preview EXPO_GO=1 expo start --host lan --go",
    "dev:development": "APP_ENV=development EXPO_GO=1 expo start --host lan --go",
    "dev:staging": "APP_ENV=staging EXPO_GO=1 expo start --host lan --go",
    "dev:production": "APP_ENV=production EXPO_GO=1 expo start --host lan --go",
    "ws:start": "bun scripts/start-websocket-standalone.ts",
    "email:test": "bun scripts/test-email-service.ts",
    "email:server": "bun scripts/start-email-server.ts",
    "notification:test": "bun scripts/test-notification-service.ts",
    "// === DEVELOPMENT BUILD MODE ===": "",
    "start:dev": "expo start --host lan",
    "start:tunnel:dev": "NODE_ENV=development expo start --tunnel",
    "start:multi-network": "EXPO_GO=1 expo start --host lan --go",
    "start:secondary-wifi": "EXPO_GO=1 expo start --host lan --go",
    "web:open": "open http://localhost:8081",
    "android:dev": "expo start --android --host lan",
    "ios:dev": "expo start --ios --host lan",
    "// === DATABASE OPERATIONS ===": "",
    "db:local:up": "docker-compose -f docker-compose.local.yml up -d postgres-local redis-local",
    "db:local:down": "docker-compose -f docker-compose.local.yml down",
    "db:local:reset": "docker-compose -f docker-compose.local.yml down -v && bun run db:local:up",
    "db:reset": "./scripts/db-reset.sh",
    "db:migrate": "drizzle-kit migrate",
    "db:migrate:local": "APP_ENV=local drizzle-kit migrate",
    "db:migrate:dev": "APP_ENV=development drizzle-kit migrate",
    "db:push": "drizzle-kit push",
    "db:push:local": "APP_ENV=local drizzle-kit push --config=drizzle.config.ts",
    "db:push:dev": "APP_ENV=development drizzle-kit push --config=drizzle.config.ts",
    "db:studio": "drizzle-kit studio",
    "db:studio:local": "APP_ENV=local drizzle-kit studio",
    "db:studio:dev": "APP_ENV=development drizzle-kit studio",
    "db:studio:prod": "APP_ENV=production drizzle-kit studio",
    "db:studio:production": "APP_ENV=production drizzle-kit studio",
    "healthcare:setup": "bun run scripts/setup-healthcare-local.ts",
    "healthcare:setup:local": "APP_ENV=local DATABASE_URL=postgresql://myexpo:myexpo123@localhost:5432/myexpo_dev bun run scripts/setup-healthcare-local.ts",
    "healthcare:setup:dev": "APP_ENV=development bun run scripts/setup-healthcare-local.ts",
    "healthcare:demo": "bun run healthcare:setup",
    "// === BUILD & DEPLOYMENT ===": "",
    "preview": "bash scripts/preview-build.sh",
    "preview:quick": "bash scripts/preview-build.sh ios true",
    "preview:ios": "eas build --profile preview --platform ios",
    "preview:android": "eas build --profile preview --platform android",
    "preview:ios:local": "eas build --profile preview --platform ios --local",
    "preview:android:local": "eas build --profile preview --platform android --local",
    "preview:run:ios": "eas build:run -p ios --latest",
    "preview:run:android": "eas build:run -p android --latest",
    "eas:setup": "bash scripts/setup-eas.sh",
    "eas:build:dev": "bash scripts/build-development.sh",
    "eas:build:ios": "eas build --profile development --platform ios",
    "eas:build:android": "eas build --profile development --platform android",
    "// === TESTING ===": "",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "expo lint",
    "api:test": "tsx scripts/test-api-endpoints.ts",
    "api:health": "curl -f http://localhost:8081/api/health || echo 'API is not running'",
    "// === ENVIRONMENT & SETUP ===": "",
    "setup:env": "bash scripts/setup-environment.sh",
    "setup:env:dev": "bash scripts/setup-environment.sh development",
    "setup:env:preview": "bash scripts/setup-environment.sh preview",
    "setup:env:expo": "bash scripts/setup-environment.sh expo-go",
    "env:generate": "node scripts/generate-env-files.js",
    "env:generate:local": "node scripts/generate-env-files.js local",
    "env:generate:production": "node scripts/generate-env-files.js production",
    "env:update-ip": "node scripts/update-ip-address.js",
    "// === UTILITIES ===": "",
    "reset-project": "node ./scripts/reset-project.js",
    "reset-profile": "tsx scripts/reset-profile-completion.ts",
    "delete-user": "tsx scripts/delete-user.ts",
    "expo:go": "APP_ENV=development EXPO_GO=1 expo start --clear --go",
    "expo:go:local": "./scripts/start-expo-go-local.sh",
    "debug:ios": "EXPO_GO=1 expo start --ios --clear --go --dev",
    "debug:android": "EXPO_GO=1 expo start --android --clear --go --dev",
    "logs:ios": "react-native log-ios",
    "logs:android": "react-native log-android",
    "// === NGROK (TUNNELING) ===": "",
    "ngrok:setup": "bash scripts/setup-ngrok.sh",
    "ngrok:start": "./scripts/start-ngrok.sh",
    "ngrok:update-eas": "./scripts/update-eas-ngrok.sh",
    "ngrok:build:ios": "bun run ngrok:update-eas && eas build --profile local-ngrok --platform ios",
    "ngrok:build:android": "bun run ngrok:update-eas && eas build --profile local-ngrok --platform android"
  },
  "dependencies": {
    "@better-auth/expo": "^1.2.8",
    "@expo/vector-icons": "^14.1.0",
    "@hookform/resolvers": "^5.0.1",
    "@neondatabase/serverless": "^1.0.0",
    "@react-native-async-storage/async-storage": "^2.1.2",
    "@react-navigation/bottom-tabs": "^7.3.10",
    "@react-navigation/elements": "^2.3.8",
    "@react-navigation/native": "^7.1.6",
    "@tanstack/react-query": "^5.79.0",
    "@trpc/client": "^11.1.4",
    "@trpc/react-query": "^11.1.4",
    "@trpc/server": "^11.3.1",
    "@types/bull": "^4.10.4",
    "@types/handlebars": "^4.1.0",
    "@types/ioredis": "^5.0.0",
    "@types/lodash.debounce": "^4.0.9",
    "@types/nodemailer": "^6.4.17",
    "@types/ws": "^8.18.1",
    "babel-plugin-inline-import": "3.0.0",
    "better-auth": "^1.2.8",
    "bull": "^4.16.5",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "date-fns": "^4.1.0",
    "dotenv": "^16.5.0",
    "drizzle-orm": "^0.44.1",
    "expo": "52.0.46",
    "expo-auth-session": "~6.2.0",
    "expo-blur": "^14.1.5",
    "expo-clipboard": "^7.1.4",
    "expo-constants": "^17.1.6",
    "expo-crypto": "~14.1.5",
    "expo-dev-client": "~5.2.0",
    "expo-device": "^7.1.4",
    "expo-font": "~13.3.1",
    "expo-haptics": "~14.1.4",
    "expo-image": "~2.3.0",
    "expo-linear-gradient": "^14.1.5",
    "expo-linking": "~7.1.5",
    "expo-network": "^7.1.5",
    "expo-notifications": "^0.31.3",
    "expo-router": "^5.1.0",
    "expo-secure-store": "^14.2.3",
    "expo-splash-screen": "~0.30.9",
    "expo-status-bar": "~2.2.3",
    "expo-symbols": "~0.4.5",
    "expo-system-ui": "~5.0.8",
    "expo-web-browser": "^14.1.6",
    "handlebars": "^4.7.8",
    "immer": "^10.1.1",
    "ioredis": "^5.6.1",
    "lodash.debounce": "^4.0.8",
    "nativewind": "4.1.6",
    "nodemailer": "^7.0.3",
    "pg": "^8.16.0",
    "react": "19.0.0",
    "react-dom": "19.0.0",
    "react-hook-form": "^7.56.4",
    "react-native": "0.79.3",
    "react-native-gesture-handler": "~2.24.0",
    "react-native-get-random-values": "^1.11.0",
    "react-native-reanimated": "~3.17.4",
    "react-native-safe-area-context": "5.4.0",
    "react-native-screens": "~4.11.1",
    "react-native-svg": "15.11.2",
    "react-native-web": "~0.20.0",
    "react-native-webview": "13.13.5",
    "recharts": "^2.15.3",
    "sonner": "^2.0.4",
    "superjson": "^2.2.2",
    "tailwind-merge": "^3.3.0",
    "tailwindcss-animate": "1.0.7",
    "tw-animate-css": "^1.3.2",
    "ws": "^8.18.2",
    "zod": "^3.25.42",
    "zustand": "^5.0.5"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@babel/plugin-transform-runtime": "^7.27.4",
    "@testing-library/jest-native": "^5.4.3",
    "@testing-library/react-hooks": "^8.0.1",
    "@testing-library/react-native": "^13.2.0",
    "@types/jest": "^29.5.14",
    "@types/pg": "^8.15.4",
    "@types/react": "~19.0.10",
    "@types/react-test-renderer": "^19.1.0",
    "drizzle-kit": "^0.31.1",
    "eslint": "^8.57.0",
    "eslint-config-expo": "~9.2.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^30.0.0-beta.3",
    "metro-react-native-babel-preset": "^0.77.0",
    "null-loader": "^4.0.1",
    "react-test-renderer": "19.0.0",
    "string-replace-loader": "^3.2.0",
    "tailwindcss": "3.4.1",
    "tsx": "^4.19.4",
    "typescript": "~5.8.3"
  },
  "trustedDependencies": [
    "tailwindcss",
    "nativewind"
  ],
  "private": true,
  "expo": {
    "doctor": {
      "reactNativeDirectoryCheck": {
        "exclude": [
          "@neondatabase/serverless",
          "@radix-ui/react-checkbox",
          "@radix-ui/react-slot",
          "@radix-ui/react-tabs",
          "@trpc/client",
          "@trpc/react-query",
          "@trpc/server",
          "dotenv",
          "lodash.debounce",
          "pg",
          "sonner",
          "tailwindcss-animate",
          "tw-animate-css",
          "drizzle-orm"
        ]
      }
    }
  }
}
